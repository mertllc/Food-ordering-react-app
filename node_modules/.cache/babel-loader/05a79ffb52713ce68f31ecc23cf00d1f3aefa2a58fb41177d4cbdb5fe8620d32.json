{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mertl\\\\Desktop\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type == \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    console.log(state.totalAmount, action.item.price, action.item.amount);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type == \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n    }\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"ADD\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","console","log","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/mertl/Desktop/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type == \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    console.log(state.totalAmount, action.item.price, action.item.amount);\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type == \"REMOVE\") {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n    }\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"ADD\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}